service: my-sls-scraper

provider:
  name: aws
  runtime: python3.8
  logRetentionInDays: 1

  environment:
    FEED_BUCKET_NAME: !Ref ScraperFeedBucket
    HTTP_CACHE_BUCKET_NAME: !Ref HttpCacheBucket
    CONTAINER_NAME: 'scraper_container'
    ECS_CLUSTER: !GetAtt FargateECSCluster.Arn
    ECS_TASK_ARN: !Ref FargateECSTaskDefinition
    ECS_SUBNET: !Ref FargateSubnet
    ECS_SEC_GROUP: !Ref FargateSG

  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:PutObject'
      Resource: !Sub
        - 'arn:aws:s3:::#{BucketName}/*'
        - BucketName: !Ref ScraperFeedBucket
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
        - 's3:PutObject'
        - 's3:ListBucket'
      Resource:
        - !Sub
          - 'arn:aws:s3:::#{BucketName}/*'
          - BucketName: !Ref HttpCacheBucket
        - !Sub
          - 'arn:aws:s3:::#{BucketName}'
          - BucketName: !Ref HttpCacheBucket

    - Effect: Allow
      Action:
        - ecs:RunTask
      Resource:
        - !Ref FargateECSTaskDefinition
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource:
        - !GetAtt FargateExecutionRole.Arn
    - Effect: Allow
      Action:
        - iam:PassRole
      Resource:
        - !GetAtt FargateTaskRole.Arn

functions:
  lambdaScrape:
    handler: launcher.scrape
  fargateScrape:
    handler: launch_fargate.launch_fargate
    events:
      - schedule:
          rate: cron(0/1 * * * ? *)
          enabled: true
          description:
            Header spider every Minute
            # The input is key-value pairs accessed in the root of the event parameter of every handler function, i.e. event.get("spider_name")
          input:
            spider_name: header_spider
            # ...
    # We include files by whitelisting to reduce the deployment time.
    # Just remember to add any files you create!
  pollSpidersScrape:
    handler: handler.run_crawlers

package:
  include:
    - handler.py
    - launcher.py
    - launch_fargate.py
    - my_sls_scraper/**
    - scrapy.cfg
  exclude:
    - './**'

resources:
  - AWSTemplateFormatVersion: '2010-09-09'
    Transform: 'AWS::Serverless-2016-10-31'
  - ${file(./s3-template.yml)}
  - ${file(./fargate-template.yml)}

plugins:
  - serverless-python-requirements
  - serverless-cloudformation-sub-variables
custom:
  pythonRequirements:
    slim: true # Omits tests, __pycache__, *.pyc etc from dependencies
    fileName: requirements.txt
